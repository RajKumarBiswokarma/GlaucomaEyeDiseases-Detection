# -*- coding: utf-8 -*-
"""Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ld6DHYiAmUwPffqdpaKFTDHC8ncSijGj
"""

# from google.colab import drive
# drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd '/content/drive/My Drive/dataset'

import os
import cv2
import numpy as np
from time import time
from tensorflow.keras.models import load_model

inception_model = load_model('inception_model_epoch.h5')

# Converting Image to Processable format
img = cv2.imread('dataset/test/GN/image_1392.jpg')
img = cv2.resize(img,(224,224))
    
# Performing the Image Processing Using OpenCV
transformed_glaucoma = cv2.applyColorMap(img, cv2.COLORMAP_HSV)
transformed_glaucoma = cv2.resize(transformed_glaucoma, (224, 224))

image = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
image = cv2.resize(image, (224, 224))
image = np.array(image) / 255
image = np.expand_dims(image, axis=0)

gray_image = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) 
ret,thresh = cv2.threshold(gray_image,100,300,0) 
contours,hierarchy = cv2.findContours(thresh,cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE) 
contoured_glaucoma = cv2.drawContours(img,contours,-1,(0,300,0),1)
contoured_glaucoma = cv2.resize(contoured_glaucoma, (224, 224))

# cv2.imwrite('./content/drive/MyDrive/dataset/images/transformed_image.jpg', transformed_glaucoma)
# cv2.imwrite('content/drive/MyDrive/dataset/images/contoured_image.jpg', contoured_glaucoma)

# Predicting the Probability of the result case
inception_model_pred = inception_model.predict(image)
probability = inception_model_pred[0]
print("inception model Prediction:")
if probability[0] < 0.5:
  inception_resnet_v2_glaucoma_glaucoma_pred = 'Glaucoma POSITIVE'
else:
  inception_resnet_v2_glaucoma_glaucoma_pred = 'Glaucoma NEGATIVE'
print(inception_resnet_v2_glaucoma_glaucoma_pred)
inception_model_pred

